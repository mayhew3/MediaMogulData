plugins {
    // This plugin allows me to check if there are any updates available for any of the dependencies.
    // From the root directory, run 'gradle dependencyUpdates'. It won't make changes, but print out the latest versions.
    id 'com.github.ben-manes.versions' version '0.17.0'
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = 1.8
group = 'com.mayhew3.mediamogul'
version = '0.6.0'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven { url 'https://jitpack.io' }
}


dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.mashape.unirest:unirest-java:1.4.9'
    compile 'info.debatty:java-string-similarity:1.1.0'
    compile 'joda-time:joda-time:2.9.9'
    compile 'org.apache.logging.log4j:log4j-core:2.11.0'
    compile 'org.jsoup:jsoup:1.11.3'
    compile 'org.postgresql:postgresql:42.2.2'
    compile 'org.seleniumhq.selenium:selenium-server:3.141.59'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
    compile group: 'org.jetbrains', name: 'annotations', version: '17+'
    compile 'com.github.mayhew3:Postgres-Object:0.9+'
    compile 'com.github.igdb:api-java:2.0.1'
    compile 'com.cloudinary:cloudinary-http44:1.22.1'
    compile 'com.cloudinary:cloudinary-taglib:1.22.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
    testCompile 'org.easytesting:fest-assert-core:2.0M10'
    testCompile 'org.assertj:assertj-joda-time:2.2.0'
    testCompile 'org.mockito:mockito-core:2.18.3'
}

jar {
    manifest {
        attributes("Implementation-Title": "Task Schedule Runner",
                "Implementation-Version": version,
                "Main-Class": "com.mayhew3.mediamogul.scheduler.TaskScheduleRunner")
    }
    archiveFileName = "media-mogul-scheduler.jar"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

task runTaskScheduleRunner(type:JavaExec) {
    main = 'com.mayhew3.mediamogul.scheduler.TaskScheduleRunner'
    classpath = sourceSets.main.runtimeClasspath
    args = ['-db', 'Heroku', 'LogToFile']
}

test {
    exclude 'com/mayhew3/mediamogul/TiVoDaylightSavingsTest.class'
    exclude 'com/mayhew3/mediamogul/TiVoMatchExistingTest.class'
    exclude 'com/mayhew3/mediamogul/TVDBSeriesUpdaterTest.class'
    exclude 'com/mayhew3/mediamogul/SchemaTestTest.class'
    exclude 'com/mayhew3/mediamogul/SchemaLocalTest.class'
    exclude 'com/mayhew3/mediamogul/SteamUpdaterTest.class'
    exclude 'com/mayhew3/mediamogul/IGDBUpdaterTest.class'
}

run {
    args = ['-db', 'Test']
}

mainClassName = 'com.mayhew3.mediamogul.scheduler.TaskScheduleRunner'